name: DevSecOps
'on':
  push:
    branches:
      - GCP-DEV
  pull_request:
    branches:
      - GCP-DEV
  workflow_dispatch: null

env:
  GITHUB_PUSH_BEFORE_SHA: '${{ github.event.before }}'
  GITHUB_PUSH_BASE_SHA: '${{ github.event.base }}'
  GITHUB_PULL_BASE_SHA: '${{ github.event.pull_request.base.sha }}'
  GITHUB_DEFAULT_BRANCH: '${{ github.event.repository.default_branch }}'
  GITGUARDIAN_API_KEY: '${{ secrets.GITGUARDIAN_API_KEY }}'

jobs:

  Auto_Code_Review:
    name: Code-Review-DevSkim
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: microsoft/DevSkim-Action@v1
      - uses: github/codeql-action/upload-sarif@v1
        with:
         sarif_file: devskim-results.sarif
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          name: DevSkim-artifact
          path: ${{ github.workspace }}

  Secrets_Scan:
    name: SecretsScan-GitGuardian
    runs-on: ubuntu-latest
    needs:
      - Auto_Code_Review
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: GitGuardian scan
        uses: GitGuardian/gg-shield-action@master
        with:
          args: -v --all-policies --show-secrets 
        env:
          GITHUB_PUSH_BEFORE_SHA: '${{ github.event.before }}'
          GITHUB_PUSH_BASE_SHA: '${{ github.event.base }}'
          GITHUB_PULL_BASE_SHA: '${{ github.event.pull_request.base.sha }}'
          GITHUB_DEFAULT_BRANCH: '${{ github.event.repository.default_branch }}'
          GITGUARDIAN_API_KEY: '${{ secrets.GITGUARDIAN_API_KEY }}'



         

  Software_Comp_Analysis_Debricked:
    name: Software-Comp-Analysis-Debricked
    runs-on: ubuntu-latest
    needs:
      - Secrets_Scan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: debricked/actions/scan@v1
        env:
          USERNAME: '${{ secrets.DEBRICKED_USERNAME }}'
          PASSWORD: '${{ secrets.DEBRICKED_PASSWORD }}'


  SCA_OWASP_DEP_CHECK:
    name: Source Composition Analysis (OWASP dependency check)
    runs-on: ubuntu-latest
    needs:
      - Secrets_Scan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'    
          others: ''
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports

  SAST:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    needs:
     - Software_Comp_Analysis_Debricked
     - SCA_OWASP_DEP_CHECK
    steps:
      - uses: AppThreat/sast-scan-action@master
        with:
          type: "python"

      - uses: actions/upload-artifact@v1
        with:
          name: reports
          path: reports

 

  
        
  Build_Image_Docker_Test:
    name: Build-Push-Image-Docker
    runs-on: ubuntu-latest
    needs:
      - SAST    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: misterbert0ni/testimage
          tags: 'v1, latest, ${{ github.sha }}'
          registry: docker.io
          dockerfile: ./Dockerfile
          username: '${{ secrets.DOCKER_USERNAME }}'
          password: '${{ secrets.DOCKER_PASSWORD }}'


 