name: Build and Deploy to GKE

on:
  # workflow_run:
  #   workflows: ["DevSecOps"]
  #   branches: 
  #     - GCP-DEV
  #     - master
  #   types: 
  #     - completed
  # workflow_dispatch: null   
 
  
 push:
   branches:
     - GCP-DEV
 pull_request:
   branches:
     - GCP-DEV
 workflow_dispatch: null    

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }} # GKE Project Name
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}    # GKE Cluster Name
  GKE_ZONE: ${{ secrets.GKE_ZONE }}   # Default GKE deployment Zone
  SA_ACC: ${{ secrets.GKE_SA_KEY }} # GKE Service account
  DEPLOYMENT_NAME: exam-deployment # Deployment Name
  IMAGE: devsecops #Image Name
  #DJANGO CREDS
  DJANGO_SU_NAME: ${{ secrets.DJANGO_SU_NAME }}
  DJANGO_SU_EMAIL: ${{ secrets.DJANGO_SU_EMAIL }}
  DJANGO_SU_PASSWORD: ${{ secrets.DJANGO_SU_PASSWORD }}


jobs:
  setup-build-publish-deploy:
    name: Setup, build and deploy image to GKE
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .  
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
        docker inspect "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
        kubectl get pods 
        kubectl exec deploy/exam-deployment -- ls;id;pwd
 # kubectl exec deploy/exam-deployment -- echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'pass')" | python manage.py shell
 # kubectl exec deploy/exam-deployment -- echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('${{ secrets.DJANGO_SU_NAME }}'', '${{ secrets.DJANGO_SU_EMAIL }}', '${{ secrets.DJANGO_SU_PASSWORD }}')" | python manage.py shell
        